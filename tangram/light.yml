global:
    background_color: [0.886, 0.890, 0.906, 1.00]
    water_color: [0.702, 0.757, 0.851, 1.00]
    park_color: [0.608, 0.788, 0.608, 1.00]
    park_label_color: [0.231, 0.502, 0.412, 1.00]
    grass_color: [0.812, 0.906, 0.831, 1.00]
    garden_color: [0.851, 0.918, 0.804, 1.00]
    school_color: [0.945, 0.949, 0.996, 1.00]
    hospital_color: [1.000, 0.902, 0.902, 1.00]
    pedestrian_color: global.background_color
    industrial_color: [0.929, 0.890, 0.690, 1.00]
    brownfield_color: [0.816, 0.792, 0.753, 1.00]
    commercial_color: [0.922, 1.000, 0.996, 1.00]
    aerodrome_color: [0.859, 0.859, 0.859, 1.00]
    wood_color: [0.910, 0.953, 0.863, 1.00]
    scrub_color: [0.859, 0.937, 0.820, 1.00]
    glacier_color: "#ffffff"
    sand_color: "#f3f3f3"
    runway_color: "#e6e6e6"
    buildings_color: [0.773, 0.792, 0.847, 1.00]
    physical_line_color: "#aaaaaa"
    physical_line_label_color: "white"
    highway_color:  "white"
    highway_tunnel_color: "white"
    major_road_color: "white"
    medium_road_color: "white"
    minor_road_color: "white"
    admin_color: "black"
    label_color:  "black"

styles:
    space-constant:
        shaders:
            blocks:
                global: |
                    // Get the constant coordinates (glitches on zooms)
                    // ================================
                    vec2 getConstantCoords () {
                        #ifdef TANGRAM_FRAGMENT_SHADER
                        const float pixel_scale = 695.;
                        float meter_pixels = u_meters_per_pixel / u_device_pixel_ratio;
                        vec2 st = gl_FragCoord.xy/pixel_scale;
                        const float dot_wrap = 1000.;
                        st += mod(u_map_position.xy / meter_pixels, dot_wrap)/pixel_scale;
                        return st;
                        #else
                        return vec2(0.0,0.0);
                        #endif
                    }

    functions-aastep:
        shaders:
            extensions: OES_standard_derivatives
            blocks:
                global: |
                    // AntiAliased Step function
                    //=============================
                    float aastep(float threshold, float value) {
                        #ifdef TANGRAM_FRAGMENT_SHADER
                            #ifdef TANGRAM_EXTENSION_OES_standard_derivatives
                                float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;
                                return smoothstep(threshold-afwidth, threshold+afwidth, value);
                            #else
                                return step(threshold, value);
                            #endif
                        #else
                            return step(threshold, value);
                        #endif
                    }
    
    patterns-stripes:
        mix: functions-aastep
        shaders:
            defines:
                PI: 3.14159265358979323846
            blocks:
                global: |
                    // Return a distance function of stripes
                    float stripesDF (vec2 st) {
                        return abs(sin(st.y*PI));
                    }
                    // Adjustable width stripes
                    float stripes (vec2 st, float width) {
                        return aastep(width,stripesDF(st));
                    }
                    // Faster optimisation of diagonal stripes
                    float diagonalStripes (vec2 st) {
                        vec2 i_st = floor(st);
                        vec2 f_st = fract(st);
                        if (mod(i_st.y,2.) - mod(i_st.x,2.) == 0.) {
                            return 1.0 - aastep(f_st.x,f_st.y);
                        } else {
                            return aastep(f_st.x,f_st.y);
                        }
                    }
    diagonal:
        base: polygons
        mix: [space-constant, patterns-stripes]
        shaders:
            blocks:
                filter: |
                    vec2 st = getConstantCoords();
                    color = mix(color,vec4(0.5,0.5,0.5,0.5),diagonalStripes(st*200.));

sources:
    protomaps:
        type: MVT
        url: https://api.protomaps.com/tiles/v1/{z}/{x}/{y}.pbf
        tile_size: 512
        max_zoom: 14
        url_params:
            key: global.api_key
        preserve_tiles_within_zoom: 4

scene:
    background:
        color: global.background_color

fonts:
    Inter:
        - weight: 100
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 200
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 300
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 400
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 500
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 600
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 700
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 800
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2
        - weight: 900
          url: https://cdn.protomaps.com/fonts/woff2/Inter.var.woff2


# order
# natural 0
# landuse 10
# water   20
# physical_line 30
# roads 40
# buildings 50
# admin 60

layers:
    water:
        data: { source: protomaps, layer: water }
        draw:
            polygons:
                color: global.water_color
                order: 20

    landuse:
        data: { source: protomaps, layer: landuse }
            
        park:
            filter:
                - leisure: park
                - landuse: cemetery
            draw:
                polygons:
                    style: diagonal
                    color: global.park_color
                    order: 11
                points:
                    size: 0px
                    color: black
                    priority: 10 
                    placement: midpoint
                    text:
                        font:
                            weight: 200
                            size: 12px
                            family: Inter
                            fill: global.park_label_color
                            style: italic
                            stroke:
                                color: global.background_color
                                width: 3px
                    
        grass:
            filter:
                - landuse: grass
            draw:
                polygons:
                    color: global.grass_color
                    order: 10
        
        recreation:
            filter:
                - landuse: recreation_ground
                - leisure: garden
                - leisure: playground
                - leisure: golf_course
                - leisure: dog_park
            draw:
                polygons:
                    color: global.garden_color
                    order: 10
                    
        school:
            filter:
                - amenity: college
                - amenity: university
                - amenity: school
                - amenity: kindergarten
            draw:
                polygons:
                    color: global.school_color
                    order: 10
                    
        hospital:
            filter:
                - amenity: hospital
            draw:
                polygons:
                    color: global.hospital_color
                    order: 10
                    
        residential:
            filter:
                - landuse: residential
            draw:
                polygons:
                    color: [0.937, 0.937, 0.937, 1.00]
                    order: 10
                    
        pedestrian:
            filter:
                - highway: pedestrian
                - man_made: bridge
                - highway: footway
                - man_made: pier
                - railway: platform
            draw:
                polygons:
                    color: global.pedestrian_color
                    order: 12
        industrial:
            filter:
                - landuse: industrial
                - landuse: railway
            draw:
                polygons:
                    style: diagonal
                    color: global.industrial_color
                    order: 10
        brownfield:
            filter:
                - landuse: brownfield
            draw:
                polygons:
                    style: diagonal
                    color: global.brownfield_color
                    order: 10
        commercial:
            filter:
                - landuse: commercial
            draw:
                polygons:
                    color: global.commercial_color
                    order: 10      
        airport:
            filter:
                aeroway: aerodrome
            draw:
                polygons:
                    color: global.aerodrome_color
                    order: 10
                    
        farmland:
            filter:
                landuse: farmland
            draw:
                polygons:
                    color: global.comemrcial_color
                    order: 10

#         other:
#             filter:
#                 none:
#                     - leisure: park
#                     - amenity: college
#                     - amenity: university
#                     - place: neighbourhood
#                     - landuse: grass
#                     - landuse: recreation_ground
#                     - leisure: garden
#                     - amenity: hospital
#                     - amenity: school
#                     - landuse: residential
#                     - highway: pedestrian
#                     - man_made: bridge
#                     - landuse: industrial
#                     - highway: footway
#                     - landuse: brownfield
#                     - leisure: playground
#                     - leisure: golf_course
#                     - landuse: railway
#                     - landuse: commercial
#                     - aeroway: aerodrome
#                     - man_made: pier
#                     - leisure: dog_park
#                     - amenity: kindergarten
#                     - landuse: farmland     
#             draw:
#                 polygons:
#                     color: [1.000, 0.702, 0.702, 1.00]
#                     order: 10

    natural:
        data: { source: protomaps, layer: natural }
        wood:
            filter: 
                any:
                    - natural: wood
                    - leisure: nature_reserve
                    - landuse: forest
            draw:
                polygons:
                    order: 0
                    color: global.wood_color

        scrub:
            filter: {natural: [scrub, grassland]}
            draw:
                polygons:
                    order: 0
                    color: global.scrub_color

        glacier:
            filter: {natural: glacier}
            draw:
                polygons:
                    order: 0
                    color: global.glacier_color
        sand:
            filter: {natural: sand}
            draw:
                polygons:
                    order: 0
                    color: global.sand_color
                
        wetland:
            filter: {natural: wetland }
            draw:
                polygons:
                    style: diagonal
                    order: 0
                    color: global.water_color
        # other:
        #     filter: 
        #         none:
        #             - natural: wood
        #             - natural: scrub
        #             - natural: glacier
        #             - landuse: forest
        #             - natural: sand
        #     draw:
        #         polygons:
        #             color: [0.694, 0.600, 1.000, 1.00]
        #             order: 0

    runway:
        data: { source: protomaps, layer: landuse }
        filter: {aeroway: runway }
        draw:
            polygons:
                color: global.runway_color
                order: 10

    buildings:
        data: { source: protomaps, layer: buildings }
        draw:
            polygons:
                color: global.buildings_color 
                order: 50

    physical_line:
        data: { source: protomaps, layer: physical_line }
        draw:
            lines:
                color: global.physical_line_color
                width: [[13,0px],[14,1px]]
                order: 30
        labels:
            filter: { $zoom: { min: 15 } }
            draw:
                text:
                    font:
                        weight: 600
                        size: 16px
                        family: Inter
                        fill: global.physical_line_label_color
                        stroke:
                            color: global.water_color
                            width: 2px

    # transit:
    #     data: { source: protomaps, layer: transit }
    #     taxiway:
    #         filter: { aeroway: taxiway }
    #         draw:
    #             lines:
    #                 color: "#e6e6e6"
    #                 width: [[12,1px],[18,8px]]
    #                 order: 999
    #     railway:
    #         filter: { railway: subway }
    #         draw:
    #             lines:
    #                 dash: [6, 4]
    #                 color: "red"
    #                 dash_background_color: "blue"
    #                 width: [[12,0.5px],[18,2px]]
    #                 order: 999999

    roads:
        data: { source: protomaps, layer: roads }

        highway:
            filter: { pmap:kind: highway }

            bridges:
                filter: { pmap:level: "1" }
                draw:
                    lines:
                        color: global.highway_color
                        width: [[3,0px],[4, 1px], [14, 2px], [16, 3px]]
                        order: 46
                        outline:
                            color: global.background_color
                            width: [[10, 0], [12, 1px], [16, 2px]]

            ground:
                filter: { pmap:level: "0" }
                draw:
                    lines:
                        color: global.highway_color
                        width: [[4,0px],[5, 0.5px], [7, 0.5px],[14, 3px], [16, 5px]]
                        order: 45
                        join: round
                        outline:
                            color: global.background_color
                            width: [[10, 0], [12, 1px], [16, 2px]]
                    points:
                        size: 0px
                        color: black
                        priority: 10 
                        placement: midpoint
                        buffer: 20 # space out motorway shields.
                        text:
                            text_source: |
                                function() {
                                    if (feature.ref) return feature.ref.replace(/;/g,"\n");
                                    return undefined;
                                }
                            font:
                                weight: 600
                                size: 8px
                                family: Inter
                                fill: "#444444"
                                background:
                                    fill: "#cccccc"
            tunnels:
                filter: { pmap:level: "-1" }
                draw:
                    lines:
                        color: global.highway_tunnel_color
                        width: [[3,0px],[4, 1px], [14, 2px], [16, 3px]]
                        order: 44
                        outline:
                            color: global.background_color
                            width: [[10, 0], [12, 1px], [16, 2px]]

        major_road:
            filter: {pmap:kind: major_road }
            draw:
                lines:
                    color: global.major_road_color
                    width: [[8, 0px], [9, 0.5px], [16, 1.5px], [19, 6m]]
                    order: 43
                    join: round

                text:
                    text_source: name
                    font:
                        weight: 400
                        size: 12px
                        family: Inter
                        fill: "#888888"
                        stroke:
                            color: white
                            width: 2px

        medium_road:
            filter: {pmap:kind: medium_road }
            draw:
                lines:
                    color: global.medium_road_color
                    width: [[10, 0px], [12, 0.5px], [16, 2.5px], [19, 8m]]
                    order: 42
                    join: round
                    outline:
                        color: global.background_color
                        width: [[12, 1px], [13, 1px], [15, 1px]]

                text:
                    text_source: name
                    font:
                        weight: 600
                        size: 13px
                        family: Inter
                        fill: [0.408, 0.408, 0.408, 1.00]
                        stroke:
                            color: white
                            width: 2px


        minor_road:
            filter: {pmap:kind: minor_road }
            draw:
                lines:
                    color: global.minor_road_color
                    width: [[13,0px],[14,1px],[16,3px]]
                    order: 41

            labels:
                filter: { $zoom: { min: 16 } }
                draw:
                    text:
                        text_source: name
                        font:
                            weight: 400
                            size: 12px
                            family: inter
                            fill: [0.545, 0.545, 0.545, 1.00]
                            stroke:
                                color: white
                                width: 2px

        other:
            filter: {pmap:kind: other }
            draw:
                lines:
                    color: [1.000, 1.000, 1.000, 1.00]
                    width: [[15,0px],[16,2px]]
                    order: 40


    admin:
        data: { source: protomaps, layer: admin }
        draw:
            lines:
                order: 60
                dash: [1, 3]
                dash_background_color: black
                color: black
                width: |
                    function() { 
                        if (feature['pmap:min_admin_level'] == "2") return 0.7 * $meters_per_pixel;
                        if (feature['pmap:min_admin_level'] == "4") return 0.4 * $meters_per_pixel;
                        else return 0.3 * $meters_per_pixel;
                    }
                alpha: 0.4

    physical_point:
        data: { source: protomaps, layer: physical_point }
        peaks:
            filter: { natural: peak }
            draw:
                text:
                    priority: 1
                    font:
                        weight: 300
                        size: 12px
                        style: italic
                        family: Inter
                        fill: "#888888" 
                        stroke:
                            color: "white"
                            width: 2px
        seas:
            filter: { place: ["ocean", "sea"] }
            draw:
                text:
                    priority: 1
                    font:
                        weight: 300
                        size: 12px
                        style: italic
                        family: Inter
                        fill: white
                        stroke:
                            color: "#aaaaaa"
                            width: 2px

    places:
        data: { source: protomaps, layer: places }
        countries:
            filter: { place: country }
            draw:
                text:
                    priority: 1
                    font:
                        weight: 400
                        size: [[2,12px],[6,18px],[8,24px]]
                        family: Inter
                        fill: [[2,"#333333"],[8,[0,0,0,0.3]]]
                        stroke:
                            color: white
                            width: 2px

        city_major:
            filter: { place: city, population: { min: 200000 }}
            draw:
                text:
                    text_source: name
                    priority: 3
                    font:
                        weight: 500
                        size: [[4,10px],[8,16px],[13,24px],[14,48px]]
                        family: Inter
                        fill: global.label_color
                        alpha: [[13,1],[14,0.5]]
                        blend: multiply
                        stroke: 
                            color: white
                            width: [[13,3px],[14,0px]]

        city_minor:
            filter: { place: city, population: { max: 200000 }}
            draw:
                text:
                    text_source: name
                    priority: 4
                    font:
                        weight: 300
                        size: 10px
                        family: Inter
                        fill: global.label_color
                        stroke: 
                            color: white
                            width: 2px

        subplace:
            filter: { place: [neighbourhood, village, town, suburb] } 
            draw:
                text:
                    priority: 4
                    text_source: name
                    font:
                        weight: 400
                        size: [[11,10px],[14,12px],[15,12px]]
                        family: Inter
                        fill: black
                        blend: add
                        order: 9999999
                        stroke: 
                            color: white
                            width: 3px

    poi:
        data: { source: protomaps, layer: poi }
        filter: { $zoom: { min: 16 }}
        draw:
            text:
                priority: 1
                font:
                    weight: 300
                    size: 10px
                    family: Inter
                    fill: black
                    stroke:
                        color: white
                        width: 2px
